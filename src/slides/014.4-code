interface Address {
    houseNumber: number
    street: string
    city?: string
    state: string
    country: string
}

interface Accommodation {
    address: Address
}

export type Describe<Type extends { [key: string]: any }> = {
    [Key in keyof Type]: typeof Type[Key] === 'object' ? Describe<Type[Key]> : string
}

const addressTypeDescription: Describe<Address> = {
    houseNumber: 'The house number',
    street: 'The street',
    state: 'The state',
    country: 'The country'
}

export type Describe<Type extends { [key: string]: any }> = {
    [Key in keyof Type]-?: string
}

const accommodationDescription: Describe<Accommodation> = {
    address: {
        houseNumber: 
    }
}

